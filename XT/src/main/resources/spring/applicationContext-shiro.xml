<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
				         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				         http://www.springframework.org/schema/context
				         http://www.springframework.org/schema/context/spring-context-3.0.xsd
				         http://www.springframework.org/schema/tx
				         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
				         http://www.springframework.org/schema/aop 
				         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 将shiro组件以bean的形式交给Spring管理 -->	
	 <bean id="lifeCycleBeanProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>
	 
	<!-- 为Shiro创建Shiro的通知,默认自动通知代理创建器 ,主要为Shiro的组件服务-->
	 <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
	 depends-on="lifeCycleBeanProcessor">
	 	<!--回顾:Spring创建代理对象的的生成方式
	 		1.jdk动态动态代理,必须要实现接口
	 		2.cglib代理,生成的对象都是目标对象的子类-->
		<!-- 给proxyTargetClass设置为true,则默认使用cglib方式创建代理对象 -->	 		
	 	<property name="proxyTargetClass" value="true"></property>
	 </bean>
	
	<!-- 切面的创建,强制使用cglib方式创建 -->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
  	
  	<!-- Shiro的安全管理器 -->
	 <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 校验原材料 -->
	 	<property name="realm" ref="AuthRealm"></property>
	 </bean>
	 <!-- 自定义Realm -->
	 <bean id="AuthRealm" class="cn.tarena.ht.shiro.AuthRealm">
	 	<property name="credentialsMatcher" ref= "authCredential"></property>
	 </bean>
	 <!-- 配置自定义的加密器 -->
	 <bean id = "authCredential" class = "cn.tarena.ht.shiro.AuthCredential">
	 
	 </bean>
	
	<!-- 权限管理器 -->
	 <bean  class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	 	<property name="securityManager" ref="securityManager"></property>
	 </bean>
	 
	 
	<!-- Shiro过滤器 的生命周期交由Spring管理,暂时不起认证作用.应将Filter交给web容器进行管理-->
	 <bean id="shiroFilter"  class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	 	<!-- 配置安全中心 -->
	 	<property name="securityManager" ref="securityManager"></property>
	 	
	 	<!-- 用户默认登录页面 
	 		1.当用户第一次访问时,默认访问路径
	 		2.当用户没有进行登录认证时,那么不管浏览器的地址是什么,都将拦截回登录界面
	 			防止浏览器地址填写类似login.action这类的后缀
	 		-->
	 	<property name="loginUrl" value="/index.jsp"></property>
	 	<!-- 表示的过滤器链 -->
	 	<property name="filterChainDefinitions">
	 	<value>
	 		<!-- 属性介绍
	 			authc	表示拦截
	 			anon	表示放行
	 			/*		表示全部的请求(只有请求,不包含静态资源文件)
	 			/**		表示全部资源(包含请求和静态资源文件)
	 		 -->
	 		 /login.action	= anon
	 		 /toLogin.action = anon
	 		 /staticfile/** = anon
			/* = authc	 	
	 	</value>
	 	</property>
	 
	 </bean>
	 
	 
</beans> 